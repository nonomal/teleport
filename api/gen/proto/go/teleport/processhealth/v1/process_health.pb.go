// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/processhealth/v1/process_health.proto

package processhealthv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProcessHealth is a resource that represents the health of a process.
type ProcessHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The kind of resource represented.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Mandatory field for all resources. Not populated for this resource type.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// The version of the resource being represented.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Common metadata that all resources share.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The configured properties of UserTask.
	Spec *ProcessHealthSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	// The current status for this UserTask.
	Status        *ProcessHealthStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHealth) Reset() {
	*x = ProcessHealth{}
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHealth) ProtoMessage() {}

func (x *ProcessHealth) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHealth.ProtoReflect.Descriptor instead.
func (*ProcessHealth) Descriptor() ([]byte, []int) {
	return file_teleport_processhealth_v1_process_health_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessHealth) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ProcessHealth) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *ProcessHealth) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProcessHealth) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProcessHealth) GetSpec() *ProcessHealthSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ProcessHealth) GetStatus() *ProcessHealthStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ProcessHealthSpec contains the properties of the ProcessHealth.
type ProcessHealthSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHealthSpec) Reset() {
	*x = ProcessHealthSpec{}
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHealthSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHealthSpec) ProtoMessage() {}

func (x *ProcessHealthSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHealthSpec.ProtoReflect.Descriptor instead.
func (*ProcessHealthSpec) Descriptor() ([]byte, []int) {
	return file_teleport_processhealth_v1_process_health_proto_rawDescGZIP(), []int{1}
}

// ProcessHealthStatus contains the current status for the UserTask.
type ProcessHealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemInfo    *ProcessSystemInfo     `protobuf:"bytes,1,opt,name=system_info,json=systemInfo,proto3" json:"system_info,omitempty"`
	UnitsByName   map[string]*Unit       `protobuf:"bytes,2,rep,name=units_by_name,json=unitsByName,proto3" json:"units_by_name,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHealthStatus) Reset() {
	*x = ProcessHealthStatus{}
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHealthStatus) ProtoMessage() {}

func (x *ProcessHealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHealthStatus.ProtoReflect.Descriptor instead.
func (*ProcessHealthStatus) Descriptor() ([]byte, []int) {
	return file_teleport_processhealth_v1_process_health_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessHealthStatus) GetSystemInfo() *ProcessSystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

func (x *ProcessHealthStatus) GetUnitsByName() map[string]*Unit {
	if x != nil {
		return x.UnitsByName
	}
	return nil
}

// ProcessSystemInfo contains information about the system and process.
type ProcessSystemInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Hostname        string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os              string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	TeleportVersion string                 `protobuf:"bytes,3,opt,name=teleport_version,json=teleportVersion,proto3" json:"teleport_version,omitempty"`
	TeleportPid     int64                  `protobuf:"varint,4,opt,name=teleport_pid,json=teleportPid,proto3" json:"teleport_pid,omitempty"`
	OsUptime        int64                  `protobuf:"varint,5,opt,name=os_uptime,json=osUptime,proto3" json:"os_uptime,omitempty"`                // in seconds
	ProcessUptime   int64                  `protobuf:"varint,6,opt,name=process_uptime,json=processUptime,proto3" json:"process_uptime,omitempty"` // in seconds
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessSystemInfo) Reset() {
	*x = ProcessSystemInfo{}
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessSystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessSystemInfo) ProtoMessage() {}

func (x *ProcessSystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessSystemInfo.ProtoReflect.Descriptor instead.
func (*ProcessSystemInfo) Descriptor() ([]byte, []int) {
	return file_teleport_processhealth_v1_process_health_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessSystemInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ProcessSystemInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ProcessSystemInfo) GetTeleportVersion() string {
	if x != nil {
		return x.TeleportVersion
	}
	return ""
}

func (x *ProcessSystemInfo) GetTeleportPid() int64 {
	if x != nil {
		return x.TeleportPid
	}
	return 0
}

func (x *ProcessSystemInfo) GetOsUptime() int64 {
	if x != nil {
		return x.OsUptime
	}
	return 0
}

func (x *ProcessSystemInfo) GetProcessUptime() int64 {
	if x != nil {
		return x.ProcessUptime
	}
	return 0
}

// Unit represents a unit of process health information.
type Unit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uptime        int64                  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Unit) Reset() {
	*x = Unit{}
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_processhealth_v1_process_health_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_teleport_processhealth_v1_process_health_proto_rawDescGZIP(), []int{4}
}

func (x *Unit) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *Unit) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Unit) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

var File_teleport_processhealth_v1_process_health_proto protoreflect.FileDescriptor

const file_teleport_processhealth_v1_process_health_proto_rawDesc = "" +
	"\n" +
	".teleport/processhealth/v1/process_health.proto\x12\x19teleport.processhealth.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!teleport/header/v1/metadata.proto\"\x9c\x02\n" +
	"\rProcessHealth\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12@\n" +
	"\x04spec\x18\x05 \x01(\v2,.teleport.processhealth.v1.ProcessHealthSpecR\x04spec\x12F\n" +
	"\x06status\x18\x06 \x01(\v2..teleport.processhealth.v1.ProcessHealthStatusR\x06status\"\x13\n" +
	"\x11ProcessHealthSpec\"\xaa\x02\n" +
	"\x13ProcessHealthStatus\x12M\n" +
	"\vsystem_info\x18\x01 \x01(\v2,.teleport.processhealth.v1.ProcessSystemInfoR\n" +
	"systemInfo\x12c\n" +
	"\runits_by_name\x18\x02 \x03(\v2?.teleport.processhealth.v1.ProcessHealthStatus.UnitsByNameEntryR\vunitsByName\x1a_\n" +
	"\x10UnitsByNameEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.teleport.processhealth.v1.UnitR\x05value:\x028\x01\"\xd1\x01\n" +
	"\x11ProcessSystemInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12)\n" +
	"\x10teleport_version\x18\x03 \x01(\tR\x0fteleportVersion\x12!\n" +
	"\fteleport_pid\x18\x04 \x01(\x03R\vteleportPid\x12\x1b\n" +
	"\tos_uptime\x18\x05 \x01(\x03R\bosUptime\x12%\n" +
	"\x0eprocess_uptime\x18\x06 \x01(\x03R\rprocessUptime\"o\n" +
	"\x04Unit\x12\x16\n" +
	"\x06uptime\x18\x03 \x01(\x03R\x06uptime\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x129\n" +
	"\n" +
	"last_check\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheckB^Z\\github.com/gravitational/teleport/api/gen/proto/go/teleport/processhealth/v1;processhealthv1b\x06proto3"

var (
	file_teleport_processhealth_v1_process_health_proto_rawDescOnce sync.Once
	file_teleport_processhealth_v1_process_health_proto_rawDescData []byte
)

func file_teleport_processhealth_v1_process_health_proto_rawDescGZIP() []byte {
	file_teleport_processhealth_v1_process_health_proto_rawDescOnce.Do(func() {
		file_teleport_processhealth_v1_process_health_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_processhealth_v1_process_health_proto_rawDesc), len(file_teleport_processhealth_v1_process_health_proto_rawDesc)))
	})
	return file_teleport_processhealth_v1_process_health_proto_rawDescData
}

var file_teleport_processhealth_v1_process_health_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_teleport_processhealth_v1_process_health_proto_goTypes = []any{
	(*ProcessHealth)(nil),         // 0: teleport.processhealth.v1.ProcessHealth
	(*ProcessHealthSpec)(nil),     // 1: teleport.processhealth.v1.ProcessHealthSpec
	(*ProcessHealthStatus)(nil),   // 2: teleport.processhealth.v1.ProcessHealthStatus
	(*ProcessSystemInfo)(nil),     // 3: teleport.processhealth.v1.ProcessSystemInfo
	(*Unit)(nil),                  // 4: teleport.processhealth.v1.Unit
	nil,                           // 5: teleport.processhealth.v1.ProcessHealthStatus.UnitsByNameEntry
	(*v1.Metadata)(nil),           // 6: teleport.header.v1.Metadata
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_teleport_processhealth_v1_process_health_proto_depIdxs = []int32{
	6, // 0: teleport.processhealth.v1.ProcessHealth.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.processhealth.v1.ProcessHealth.spec:type_name -> teleport.processhealth.v1.ProcessHealthSpec
	2, // 2: teleport.processhealth.v1.ProcessHealth.status:type_name -> teleport.processhealth.v1.ProcessHealthStatus
	3, // 3: teleport.processhealth.v1.ProcessHealthStatus.system_info:type_name -> teleport.processhealth.v1.ProcessSystemInfo
	5, // 4: teleport.processhealth.v1.ProcessHealthStatus.units_by_name:type_name -> teleport.processhealth.v1.ProcessHealthStatus.UnitsByNameEntry
	7, // 5: teleport.processhealth.v1.Unit.last_check:type_name -> google.protobuf.Timestamp
	4, // 6: teleport.processhealth.v1.ProcessHealthStatus.UnitsByNameEntry.value:type_name -> teleport.processhealth.v1.Unit
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_teleport_processhealth_v1_process_health_proto_init() }
func file_teleport_processhealth_v1_process_health_proto_init() {
	if File_teleport_processhealth_v1_process_health_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_processhealth_v1_process_health_proto_rawDesc), len(file_teleport_processhealth_v1_process_health_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_processhealth_v1_process_health_proto_goTypes,
		DependencyIndexes: file_teleport_processhealth_v1_process_health_proto_depIdxs,
		MessageInfos:      file_teleport_processhealth_v1_process_health_proto_msgTypes,
	}.Build()
	File_teleport_processhealth_v1_process_health_proto = out.File
	file_teleport_processhealth_v1_process_health_proto_goTypes = nil
	file_teleport_processhealth_v1_process_health_proto_depIdxs = nil
}
